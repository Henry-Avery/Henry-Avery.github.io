<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于Django框架的学习笔记项目开发</title>
      <link href="/2020/09/11/ji-yu-django-kuang-jia-de-xue-xi-bi-ji-xiang-mu-kai-fa/"/>
      <url>/2020/09/11/ji-yu-django-kuang-jia-de-xue-xi-bi-ji-xiang-mu-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Django入门"><a href="#Django入门" class="headerlink" title="Django入门"></a>Django入门</h1><h2 id="建立项目"><a href="#建立项目" class="headerlink" title="建立项目"></a>建立项目</h2><p>先建立项目规范（先要立好规矩），再建立虚拟环境，以便在其中创建项目。</p><h3 id="制定规范"><a href="#制定规范" class="headerlink" title="制定规范"></a>制定规范</h3><p>只把这个项目的一些明确目标列出来，突出开发重点。</p><p>规范如下：</p><p>开始编写一个名为“学习笔记”的Web应用程序，让用户能够记录感兴趣的主题，并在学习每个主题的过程中添加日志条目。“学习笔记”的主页对这个网站进行描述，并邀请用户注册或登录。用户登录后，就可以创建主题、添加新条目以及阅读既有的条目。</p><p>学习新的主题时，记录学到的知识可以帮助跟踪和复习这些知识。优秀的应用程序让这个记录的过程简单易行。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>《Python从入门到实践》</p><p><a href="https://blog.csdn.net/u012084802/article/details/79625428" target="_blank" rel="noopener">Python练习Django项目——学习笔记</a></p><p><a href="https://www.jianshu.com/p/b3267d16c245" target="_blank" rel="noopener">Python编程从入门到实践：Web应用程序 - Django入门</a></p><p><a href="https://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noopener">HTML 教程</a></p><p><a href="https://docs.djangoproject.com/en/2.2/ref/templates/language/#templates" target="_blank" rel="noopener">Django 官网文档 The Django template language</a></p><h3 id="建立虚拟环境并激活"><a href="#建立虚拟环境并激活" class="headerlink" title="建立虚拟环境并激活"></a>建立虚拟环境并激活</h3><p>虚拟环境是系统的一个位置，把它隔离出来，这是必须的返校隔离措施，之后我们还要把它公之于众——部署到服务器上。</p><p>刚刚开始问题就出现了，Windows要怎么终端切换到目录来着？之前外星人入侵的项目明明用过，给忘了。之前就是只看了一眼就卡住，没有动手去做，这次让我来百度一鼓作气搞定。</p><pre><code>C:\Users\ASUS&gt;d:D:\&gt;cd learning_logD:\learning_log&gt;</code></pre><p>原来切换目录这么简单，我只是不知道格式（心虚，这我都不知道，原因还是以前都没怎么认真用过电脑）</p><p>还有一个很蠢的问题也解决了，之前下载的是Anaconda 3，用的也一直是Anaconda 的Prompt，我这次直接cmd能有用才怪。不过好在总算是可以继续了。</p><p>现在我们为项目新建了一个目录， 将其命名为learning_log，使用如下命令成功创建名为ll_env的虚拟环境：</p><pre><code>python -m venv ll_env</code></pre><p>建立虚拟环境后， (Windows系统下)成功使用下面的命令激活它：</p><pre><code>ll_env\Scripts\activate</code></pre><p>要停止的话，使用终止命令deactivate</p><h3 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h3><p>出问题了就重新来过，建立虚拟环境然后激活,然后再安装Django包：</p><pre><code>(ll_env) (base) D:\learning_log&gt; pip install DjangoCollecting Django</code></pre><p>下载可能有点慢，要等一会。</p><p>记住，Django仅在虚拟环境处于活动状态才可用。</p><p>嘛，就知道没有这么简单，下载失败了，这次又是哪里出了问题呢？更新了一下pip的版本重新下载。</p><pre><code>(ll_env) (base) D:\learning_log&gt;pip install DjangoCollecting Django  Downloading https://files.pythonhosted.org/packages/01/a5/fb3dad18422fcd4241d18460a1fe17542bfdeadcf74e3861d1a2dfc9e459/Django-3.1.1-py3-none-any.whl (7.8MB)     |████████████████████████████████| 7.8MB 12kB/sCollecting pytz (from Django)  Downloading https://files.pythonhosted.org/packages/4f/a4/879454d49688e2fad93e59d7d4efda580b783c745fd2ec2a3adf87b0808d/pytz-2020.1-py2.py3-none-any.whl (510kB)     |████████████████████████████████| 512kB 9.5kB/sCollecting asgiref~=3.2.10 (from Django)  Downloading https://files.pythonhosted.org/packages/d5/eb/64725b25f991010307fd18a9e0c1f0e6dff2f03622fc4bcbcdb2244f60d6/asgiref-3.2.10-py3-none-any.whlCollecting sqlparse&gt;=0.2.2 (from Django)  Downloading https://files.pythonhosted.org/packages/85/ee/6e821932f413a5c4b76be9c5936e313e4fc626b33f16e027866e1d60f588/sqlparse-0.3.1-py2.py3-none-any.whl (40kB)     |████████████████████████████████| 40kB 7.8kB/sInstalling collected packages: pytz, asgiref, sqlparse, DjangoSuccessfully installed Django-3.1.1 asgiref-3.2.10 pytz-2020.1 sqlparse-0.3.1WARNING: You are using pip version 19.2.3, however version 20.2.3 is available.You should consider upgrading via the &#39;python -m pip install --upgrade pip&#39; command.</code></pre><p>原来是pip命令需要更新了，按照提示更新版本就成功了。</p><h3 id="创建项目以及数据库"><a href="#创建项目以及数据库" class="headerlink" title="创建项目以及数据库"></a>创建项目以及数据库</h3><pre><code>django-admin.py startproject learning_log .</code></pre><p>新建一个名为learning_log的项目，不知道又出什么问题，先到这吧，睡了睡了。</p><h4 id="1-问题"><a href="#1-问题" class="headerlink" title="1 问题"></a>1 问题</h4><p>在prompt命令窗口执行上面的命令，会打开 django-admin.py 源代码</p><h4 id="2-原因"><a href="#2-原因" class="headerlink" title="2 原因"></a>2 原因</h4><p>*.py 的默认打开方式为 pycharm。所以自然直接打开，我没有安装pycharm，所以是用vscode打开的。</p><h4 id="3-解决"><a href="#3-解决" class="headerlink" title="3 解决"></a>3 解决</h4><p>修改一下命令</p><pre><code>django-admin startproject [项目名] .</code></pre><p>执行成功后，输入ls命令（Windows对应dir）就会发现 Django 新建好了需要的文件</p><table><thead><tr><th align="center">文件名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">settings.py</td><td align="center">指定Django如何与你的系统交互以及如何管理项目，修改其中一些设置， 并添加一些设置</td></tr><tr><td align="center">urls.py</td><td align="center">告诉Django应创建哪些网页来响应浏览器请求</td></tr><tr><td align="center">wsgi.py</td><td align="center">帮助Django提供它创建的文件， 这个文件名是web server gateway interface（Web服务器网关接口 ） 的首字母缩写。</td></tr></tbody></table><p>一大早起来直接查命令哪里出了问题，一下就解决了。接下来建立一个数据库。在这里更新了一下Django的版本。然后dir查看一下，确认后启动一个服务器，查看系统中的项目，按照响应操作打开生成的页面。</p><pre><code>python manage.py migratepython manage.py runserver</code></pre><p><img src="D:%5CBlog2%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDjango%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%5C%E9%A1%B5%E9%9D%A2.png" alt="生成页面"></p><p>至此，这个项目成功建立了，耶！</p><h2 id="创建应用程序"><a href="#创建应用程序" class="headerlink" title="创建应用程序"></a>创建应用程序</h2><p>打开另一个终端，切换到manage.py所在目录，激活虚拟环境，执行命令startapp。</p><h3 id="定义模型并激活"><a href="#定义模型并激活" class="headerlink" title="定义模型并激活"></a>定义模型并激活</h3><p>模型告诉Django如何处理应用程序中存储的数据。 在代码层面， 模型就是一个类， 包含属性和方法。</p><p><strong>models.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token comment" spellcheck="true"># Create your models here.</span><span class="token comment" spellcheck="true"># 创建了一个名为Topic 的类， 它继承了Model ——Django中一个定义了模型基本功能的类。 Topic 类只有两个属性： text 和date_added 。</span><span class="token keyword">class</span> <span class="token class-name">Topic</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">''' 用户学习的主题'''</span>    text <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 属性text是一个CharField——由字符或文本组成的数据</span>    <span class="token comment" spellcheck="true"># https://docs.djangoproject.com/en/1.8/ref/models/fields</span>    <span class="token comment" spellcheck="true"># Django Model Field Reference 用于熟悉模型中可使用的各种字段，自己开发时可能会用到</span>    date_added <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 实参auto_add_now=True 让Django将这个属性自动设置成当前日期和时间。</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""返回模型的字符串表示"""</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每当需要修改“学习笔记”管理的数据时， 都采取如下三个步骤： 修改models.py； 对learning_logs 调用makemigrations ； migrate让Django迁移项目。</p><pre class="line-numbers language-python"><code class="language-python">python manage<span class="token punctuation">.</span>py makemigrations learning_logs<span class="token comment" spellcheck="true"># 让Django修改数据库， 使其能够存储与模型Topic 相关的信息</span><span class="token comment" spellcheck="true"># 命令makemigrations 让Django确定该如何修改数据库， 使其能够存储与定义的新模型相关联的数据。</span>python manage<span class="token punctuation">.</span>py migrate<span class="token comment" spellcheck="true"># 应用这种迁移， 让Django替我们修改数据库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Django-管理网站"><a href="#Django-管理网站" class="headerlink" title="Django 管理网站"></a>Django 管理网站</h3><p>为应用程序定义模型时，Django提供的管理网站（admin site）让你能够轻松地处理模型。网站的管理员可使用管理网站，但普通用户不能使用。</p><h4 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h4><pre><code>(ll_env)learning_log&gt;python manage.py createsuperuser❶ Username (leave blank to use &#39;ehmatthes&#39;): ll_admin❷ Email address:❸ Password:  Password (again):  Superuser created successfully.</code></pre><h4 id="向管理网站注册模型"><a href="#向管理网站注册模型" class="headerlink" title="向管理网站注册模型"></a><strong>向管理网站注册模型</strong></h4><p> Django自动在管理网站中添加了一些模型，如User 和Group ，但对于我们创建的模型，必须手工进行注册。我们创建应用程序learning_logs 时，Django在models.py所在的目录中创建了一个名为admin.py的文件。</p><h4 id="添加主题"><a href="#添加主题" class="headerlink" title="添加主题"></a>添加主题</h4><p>在网站上测试添加主题“Chess”和“Rock Climbing”</p><h3 id="定义并迁移模型Entry"><a href="#定义并迁移模型Entry" class="headerlink" title="定义并迁移模型Entry"></a>定义并迁移模型Entry</h3><p>要记录学到的国际象棋和攀岩知识，需要为用户可在学习笔记中添加的条目定义模型。每个条目都与特定主题相关联，这种关系被称为多对一关系，即多个条目可关联到同一个主题。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models<span class="token comment" spellcheck="true"># Model是Django中一个定义了模型基本功能的类</span><span class="token keyword">class</span> <span class="token class-name">Topic</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token operator">-</span><span class="token operator">-</span>snip<span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""学到的有关某个主题的具体知识"""</span>    topic <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span>Topic<span class="token punctuation">,</span>on_delete<span class="token operator">=</span>models<span class="token punctuation">.</span>CASCADE<span class="token punctuation">)</span>    text <span class="token operator">=</span> models<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span>    date_added <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>auto_now_add<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        verbose_name_plural <span class="token operator">=</span> <span class="token string">'entries'</span>    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>text<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"..."</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>属性topic 是一个ForeignKey 实例，外键是一个数据库术语，引用了数据库中的另一条记录； </p><p>这些代码将每个条目关联到特定的主题。每个主题创建时，都给它分配了一个键（或ID）。 需要在两项数据之间建立联系时，Django使用与每项信息相关联的键。Django2.0版本外键要求添加on_delete参数。</p><p>在Entry 类中嵌套了Meta 类。Meta 存储用于管理模型的额外信息，设置一个特殊属性，让Django需要时使用Entries表示多个条目，没有这个类将使用Entrys来表示多个条目。</p></blockquote><p>没有看明白这些想说明什么，往后看应该就会知道了。接下来迁移数据库。生成新的迁移文件。</p><p>添加一个模型，就迁移一次数据库。过程：修改models.py，执行命令python manage.py makemigrations app_name ，再执行命令python manage.py migrate 。</p><h3 id="向管理网站注册Entry"><a href="#向管理网站注册Entry" class="headerlink" title="向管理网站注册Entry"></a>向管理网站注册Entry</h3><p>修改admin.py</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> learning_logs<span class="token punctuation">.</span>models <span class="token keyword">import</span> Topic<span class="token punctuation">,</span> Entryadmin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Topic<span class="token punctuation">)</span>admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Entry<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Django-shell"><a href="#Django-shell" class="headerlink" title="Django shell"></a>Django shell</h3><p>用于测试和排除故障的理想之地</p><p><a href="https：//docs.djangoproject.com/en/7.8/topics/db/queries">更多关于如何查询数据的文档</a></p><h2 id="创建网页：学习笔记主页"><a href="#创建网页：学习笔记主页" class="headerlink" title="创建网页：学习笔记主页"></a>创建网页：学习笔记主页</h2><p>定义URL、编写视图和编写模板。</p><p>urls -&gt; views -&gt; html  添加网页步骤。</p><h3 id="映射URL"><a href="#映射URL" class="headerlink" title="映射URL"></a>映射URL</h3><p>实际的URL模式是一个对函数url的调用，这个函数接受三个实参。</p><pre class="line-numbers language-python"><code class="language-python">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">#主页</span>    <span class="token comment" spellcheck="true">#第一个是正则表达式，r让Python将接下来的字符串视为原始字符串，引号正则表达式始于和终于何处</span>    <span class="token comment" spellcheck="true">#第二个实参指定了要调用的视图函数</span>    <span class="token comment" spellcheck="true">#第三个实参将这个URL模式的名称指定为index</span>    path<span class="token punctuation">(</span>r<span class="token string">''</span><span class="token punctuation">,</span>views<span class="token punctuation">.</span>index<span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正则表达式（regex），这是个什么鬼东西？相信后面还会有很多见面的机会……</p><blockquote><p>请求的URL与正则表达式匹配时调用视图函数</p></blockquote><h3 id="编写视图和模板"><a href="#编写视图和模板" class="headerlink" title="编写视图和模板"></a>编写视图和模板</h3><p>默认的urls.py包含在文件夹learning_log中， 现在需要在文件夹learning_logs中创建另一个urls.py文件：<strong>(注意关于 Django版本更新,书上的代码需做相应修改)</strong></p><p>打开项目主文件夹learning_log中的文件urls.py， 修改为<br> <strong>learning_log/urls.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> pathurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true"># 该模块定义了可在管理网站中请求的所有URL</span>    path<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">'learning_logs.urls'</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">'learning_logs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 代码包含实参namespace ， 让我们能够将learning_logs 的URL同项目中的其他URL区分开来</span><span class="token punctuation">]</span><span class="token triple-quoted-string string">'''Django版本更新,书上的代码需做相应修改书中源代码：from django.conf.urls import include, urlfrom django.contrib import adminurlpatterns = [    url(r'^admin/', include(admin.site.urls)),    url(r'', include('learning_logs.urls', namespace='learning_logs')),]应改为：from django.contrib import adminfrom django.urls import path, includeurlpatterns = [    path('admin/', admin.site.urls),    path('', include('learning_logs.urls', namespace='learning_logs')),]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认的urls.py包含在文件夹learning_log中， 现在需要在文件夹learning_logs中创建另一个urls.py文件：(注意关于 Django版本更新,书上的代码需做相应修改)<br> <strong>learning_logs/urls.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">"""定义learning_logs的URL模式"""</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span>re_path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsapp_name<span class="token operator">=</span><span class="token string">'learning_logs'</span> <span class="token comment" spellcheck="true"># 不能少 ，否则runserver的时候就会出错</span><span class="token comment" spellcheck="true"># https://docs.djangoproject.com/en/2.2/ref/urls/#module-django.urls.conf</span>urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true"># 主页</span>    path<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># Django将在文件views.py中查找函数index()</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># urls -> views -> html  添加网页步骤</span><span class="token triple-quoted-string string">'''Django版本更新,书上的代码需做相应修改书中源代码：from django.conf.urls import urlfrom . import viewsurlpatterns = [     # Home page.    url(r'^$', views.index, name='index'),    # Show all topics.    url(r'^topics/$', views.topics, name='topics'),    # Detail page for a single topic.    url(r'^topics/(?P&lt;topic_id>\d+)/$', views.topic, name='topic'),]应改为：from django.urls import pathfrom . import viewsapp_name='learning_logs'urlpatterns = [    # 主页    path('', views.index, name='index'),    # 显示所有的主题    path('topics/', views.topics, name='topics'),    # 特定主题的详细页面    path("topics/(?P&lt;topic_id>\d+)/", views.topic, name='topic'),]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建其他网页"><a href="#创建其他网页" class="headerlink" title="创建其他网页"></a>创建其他网页</h2><p>确定创建网页的流程后，可以扩充“学习笔记”项目了。</p><p>接下来要创建两个显示数据的页面。</p><p>所以先创建一个父模板，其他模板都将继承它。</p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><h4 id="父模板"><a href="#父模板" class="headerlink" title="父模板"></a>父模板</h4><p>这个文件包含所有页面都有的元素； 其他的模板都继承base.html。 当前， 所有页面都包含的元素只有顶端的标题。 将在每个页面中包含这个模板， 因此将这个标题设置为到主页的链接：</p><pre class="line-numbers language-html"><code class="language-html">{% raw %}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{% url <span class="token punctuation">'</span>learning_logs:index<span class="token punctuation">'</span> %}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Learning Log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>{% block content %}{% endblock content %}{% endraw %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>模板标签用(<strong>{ % % }</strong>)表示，生成一个URL。</p><p>在简单的HTML页面中，用锚标签定义链接：</p><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link_url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>link text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要修改项目中的URL，只需要修改urls.py中的URL模式。</p><h4 id="子模板"><a href="#子模板" class="headerlink" title="子模板"></a>子模板</h4><p>重新编写index.html,使其继承base.html。</p><h3 id="显示所有主题的页面"><a href="#显示所有主题的页面" class="headerlink" title="显示所有主题的页面"></a>显示所有主题的页面</h3><p>urls -&gt; views -&gt; html 添加网页步骤</p><p>下面来写一个显示全部主题的页面和一个显示特定主题中条目的页面。</p><pre><code>name &#39;request&#39; is not defined</code></pre><p><strong>views.py</strong></p><p>def topics(request) 写错成 def topics(reqest)了</p><h3 id="显示特定主题的页面"><a href="#显示特定主题的页面" class="headerlink" title="显示特定主题的页面"></a>显示特定主题的页面</h3><pre><code>Reverse for &#39;topic&#39; with arguments &#39;(&#39;&#39;,)&#39; not found. 1 pattern(s) tried: [&#39;topics/(?P&lt;topic_id&gt;\\d+)/$&#39;]</code></pre><p>return render(request, ‘learning_logs/topic.html’,context)</p><p>写成了</p><p>return render(request, ‘learning_logs/topics.html’,context)</p><pre class="line-numbers language-python"><code class="language-python">  <span class="token comment" spellcheck="true"># 特定主题的详细页面</span>  <span class="token comment" spellcheck="true"># 错误</span>  <span class="token comment" spellcheck="true"># path("topics/(?P&lt;topic_id>\d+)/", views.topic, name='topic'),</span>  <span class="token comment" spellcheck="true"># 正确</span>  re_path<span class="token punctuation">(</span>r<span class="token string">'^topics/(?P&lt;topic_id>\d+)/$'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>topic<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'topic'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># ?P&lt;topic_id> 将匹配的值存储到topic_id 中； 而表达式\d+ 与包含在两个斜杆内的任何数字都匹配， 不管这个数字为多少位。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>今天首先学习了如何使用Django框架来创建Web程序应用，相信其他语言或者框架都是大同小异。</p><p>然后制定了项目规范，列出参考资料，最后在项目完成后需要鸣谢。</p><p>在虚拟环境中安装Django，创建一个项目，并且核实已经成功立项。</p><p>学习如何创建应用程序，以及如何定义表示应用程序数据的模型。</p><p>学习了数据库，以及在修改模型后让Django来迁移数据库。</p><p>创建了可管理网站的超级用户，并使用管理网站输入了一些数据。</p><p>探索Django Shell，它能够让我在终端对话处理项目数据，排除障碍。</p><p>学习了如何定义URL、创建网络视图以及编写网页的模板。最后还使用了模板继承，让各个模板简化，使修改网站变得更加容易。</p><p>遇上了劲敌“正则表达式”和“URL模式”，而且由于Django版本更新，url（）和path（）等函数更是变得乱七八糟，最后还是靠着上网看别人写的博客才K.O了它们。</p><hr><p>下一次，我们将创建对用户友好而直观的网页，让用户无需管理网站就可以使用“学习笔记”。</p><p>我们还将添加一个用户注册系统，让用户能够注册和创建自己的学习笔记。</p><blockquote><p>“让任意数量的用户都能与之交互，是Web应用程序的核心所在。”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 在更 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB学习</title>
      <link href="/2020/09/11/matlab-xue-xi/"/>
      <url>/2020/09/11/matlab-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="第一周信号处理实验课"><a href="#第一周信号处理实验课" class="headerlink" title="第一周信号处理实验课"></a>第一周信号处理实验课</h2><h3 id="上课学习"><a href="#上课学习" class="headerlink" title="上课学习"></a>上课学习</h3><p>学校东区计算机学院708机房没有安装好MATLAB，而且有些机位不能联网，上课老师简单介绍了一下MATLAB和课后作业。</p><p>下次上课带自己的电脑去。</p><hr><h3 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h3><p>一些MATLAB的简单操作，课程报告第二周后再提交。</p><p>回去在自己电脑上安装好MATLAB，学校网速太慢了，而且还不稳定，百度云限速。</p><p>MATLAB安装办法自己网上找。</p><hr><h3 id="课外学习"><a href="#课外学习" class="headerlink" title="课外学习"></a>课外学习</h3><p><a href="https://www.bilibili.com/video/BV1GJ41137UH" target="_blank" rel="noopener">MATLAB教程_台大郭彦甫（14课=15h）</a></p><hr><h2 id="MATLAB学习"><a href="#MATLAB学习" class="headerlink" title="MATLAB学习"></a>MATLAB学习</h2><p>百度云下了我两天两夜，终于下载安装好了。</p><p>明天开始学。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> SHU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美赛启航</title>
      <link href="/2020/09/11/mei-sai-qi-hang/"/>
      <url>/2020/09/11/mei-sai-qi-hang/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="美国大学生数学建模竞赛（MCM-ICM）"><a href="#美国大学生数学建模竞赛（MCM-ICM）" class="headerlink" title="美国大学生数学建模竞赛（MCM/ICM）"></a>美国大学生数学建模竞赛（MCM/ICM）</h3><p>美国大学生数学建模竞赛（MCM/ICM）由美国数学及其应用联合会主办，是唯一的国际性数学建模竞赛，也是世界范围内最具影响力的数学建模竞赛。赛题内容涉及经济、管理、环境、资源、生态、医学、安全、等众多领域。竞赛要求三人（本科生）为一组，在四天时间内，就指定的问题完成从建立模型、求解、验证到论文撰写的全部工作，体现了参赛选手研究问题、解决方案的能力及团队合作精神。 为现今各类<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B" target="_blank" rel="noopener">数学建模竞赛</a>之鼻祖。</p><hr><h3 id="报名须知"><a href="#报名须知" class="headerlink" title="报名须知"></a>报名须知</h3><p>组队要求：三人（本科生）为一组（模型搭建，模型实现，论文写作）</p><p>比赛时间：2020年•2月14日——2月18日，在四天时间内，一般都是早晨到早晨，要安排好比赛的时间。比赛以美国东部时间为准，其比北京时间晚了大约13个小时，也就是北京时间2月15日早上九时，美国东部时间是2月14日晚八时。</p><p>比赛题目：一共分为6种题型。分别为：连续型、离散型、大数据、运筹学/网络科学、环境科学、政策。</p><p>奖项设置及获奖比例：特等奖（Outstanding Winner） 0.14%，特等奖提名奖（Finalist） 0.17%，一等奖（Meritorious Winner）7%左右，二等奖（Honorable Mentioned） 15%左右，成功参与奖也叫三等奖（Successful Participant）</p><hr><h2 id="赛前准备"><a href="#赛前准备" class="headerlink" title="赛前准备"></a>赛前准备</h2><h3 id="信息入口"><a href="#信息入口" class="headerlink" title="信息入口"></a>信息入口</h3><p><a href="https://www.zhihu.com/question/19714813" target="_blank" rel="noopener">知乎：如何入门参与数学建模？</a></p><hr><h3 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h3><p>写作软件：latex</p><p>编程软件：Matlab</p><p>公式编辑器：Mathtype</p><p>画图：Visio，亿图</p><hr><h3 id="数模学习"><a href="#数模学习" class="headerlink" title="数模学习"></a>数模学习</h3><p>书籍推荐：《数学建模》 姜启源 ，《数学建模算法与应用》司守奎</p><hr><h3 id="其他准备"><a href="#其他准备" class="headerlink" title="其他准备"></a>其他准备</h3><p>论文写作：往届获奖论文，论文模板等</p><p>经典的算法：待补充</p><hr><h3 id="学术搜索引擎"><a href="#学术搜索引擎" class="headerlink" title="学术搜索引擎"></a>学术搜索引擎</h3><p>1、<a href="https://link.zhihu.com/?target=http%3A//scholar.google.com/" target="_blank" rel="noopener">http://scholar.google.com/</a> </p><p>2、<a href="https://link.zhihu.com/?target=http%3A//qns.cc/" target="_blank" rel="noopener">http://qns.cc/</a> </p><p>后起之秀，科研人员的良好助手，上此网站的90%是从事科研的学生与老师。其词典搜索集成了目前市面上最好的在线英汉写作及科研词典，用此搜索引擎写作英文论文相当方便；其文献搜索集成了目前最优秀的数据库。</p><p>3、<a href="https://link.zhihu.com/?target=http%3A//www.scirus.com" target="_blank" rel="noopener">http://www.scirus.com</a> </p><p>Scirus是目前互联网上最全面、综合性最强的科技文献搜索引擎之一，由Elsevier科学出版社开发，用于搜索期刊和专利，效果很不错！Scirus覆盖的学科范围包括：农业与生物学，天文学，生物科学，化学与化工，计算机科学，地球与行星科学，经济、金融与管理科学，工程、能源与技术，环境科学，语言学，法学，生命科学，材料科学，数学，医学 ，神经系统科学，药理学，物理学，心理学，社会与行为科学，社会学等。</p>]]></content>
      
      
      <categories>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 在更 </tag>
            
            <tag> 美赛 </tag>
            
            <tag> 数模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机书单</title>
      <link href="/2020/09/02/ji-suan-ji-shu-dan/"/>
      <url>/2020/09/02/ji-suan-ji-shu-dan/</url>
      
        <content type="html"><![CDATA[<h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>《现代操作系统》Andrew S.Tanenbaum &amp; Herbert Bos   </p><p>​    </p><p>《鸟哥的Linux私房菜》</p><p>​    </p><h4 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h4><p>《计算机网络》James F. Kurose &amp; Keith W.Ross</p><p>《图解TCP\IP》</p><p>《图解HTTP》</p><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p>《大话数据结构》</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>《Python从入门到实践》</p><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>《Java核心技术卷Ⅰ》</p><p>《深入理解Java虚拟机》</p><h4 id="Go语言"><a href="#Go语言" class="headerlink" title="Go语言"></a>Go语言</h4><p>《Go语言实战》</p><p>​      </p><h4 id="程序员人生"><a href="#程序员人生" class="headerlink" title="程序员人生"></a>程序员人生</h4><p>《代码整洁之道》</p><p>​       </p><p>吴军老师的书</p><p>《浪潮之巅》</p><p>​     </p><p>《数学之美》</p>]]></content>
      
      
      <categories>
          
          <category> 书单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 书 </tag>
            
            <tag> 待更 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从1开始写Blog</title>
      <link href="/2020/08/31/cong-1-kai-shi-xie-blog/"/>
      <url>/2020/08/31/cong-1-kai-shi-xie-blog/</url>
      
        <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psc?/V50yGAmm4Y7rG60gKAT73IXxN51CK3xl/TmEUgtj9EK6.7V8ajmQrENiK9j7bR9qXYA11EY4TsPRZJqdImIwU1LgreNkyYn04*MFe2ZNrTrthPykK2B.ahOc0P5g1Gp1rjyBsYJnDKjU!/r" alt></p><h2 id="从1开始写Blog"><a href="#从1开始写Blog" class="headerlink" title="从1开始写Blog"></a>从1开始写Blog</h2><h3 id="写给异类"><a href="#写给异类" class="headerlink" title="写给异类"></a>写给异类</h3><h4 id="博客是什么"><a href="#博客是什么" class="headerlink" title="博客是什么"></a>博客是什么</h4><p>参见我的<a href="https://henry-avery.github.io/friends/" target="_blank" rel="noopener">友情链接</a>里的博客以及其他知名博客</p><p><a href="https://www.liaoxuefeng.com" target="_blank" rel="noopener">廖雪峰</a></p><p><a href="https://coolshell.cn/" target="_blank" rel="noopener">陈皓&amp;酷壳</a></p><p><a href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener">阮一峰</a></p><p><a href="https://lepture.com/" target="_blank" rel="noopener">LEPTURE</a></p><p><a href="http://www.yinwang.org/" target="_blank" rel="noopener">王垠</a></p><h4 id="要怎么写博客"><a href="#要怎么写博客" class="headerlink" title="要怎么写博客"></a>要怎么写博客</h4><p><a href="https://blog.huihut.com/2017/01/25/MarkdownTutorial/#urllink" target="_blank" rel="noopener">Markdown 简易入门教程</a></p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰写的Git教程</a></p><p><a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">超详细Hexo+Github博客搭建小白教程</a></p><h4 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h4><p>可以看看《暗时间》作者刘未鹏写的这篇博客文章</p><p><a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="noopener">为什么你应该（从现在开始就）写博客</a></p><p><img src="http://r.photo.store.qq.com/psc?/V50yGAmm4Y7rG60gKAT73IXxN51CK3xl/TmEUgtj9EK6.7V8ajmQrEElfJNrKjuyWae8U.db2Cr12qAfm0jJPNi8jwmhLjXfrKEBE9HoyGNcJKjczdR*jtuu3yOjfUe79vJswISqmipY!/r" alt="黄金圈法则"></p><h3 id="写给同类"><a href="#写给同类" class="headerlink" title="写给同类"></a>写给同类</h3><h4 id="为什么写博客"><a href="#为什么写博客" class="headerlink" title="为什么写博客"></a>为什么写博客</h4><p>种下一棵树最好的时间是十年以前，其次是现在。</p><p>阅读和学习是输入，写作和实践是输出，都是我们了解这个世界的途径。</p><p>阅读和写作、策划组织都是一个人的心智体现。不断阅读就需要不断主动思考，将思考的过程和结果写出来，不仅能够提高自己的心智，提高组织策划的能力，也能为他人提供参考。</p><p>为了不断超越自己。</p><p>Challenge the status quo</p><h4 id="怎么写博客"><a href="#怎么写博客" class="headerlink" title="怎么写博客"></a>怎么写博客</h4><p>搭建好博客，写下去。每周至少写完一篇发到博客上。所以平时需要多写，每天都至少要写三十分钟。</p><h4 id="博客写什么"><a href="#博客写什么" class="headerlink" title="博客写什么"></a>博客写什么</h4><p>可能写一写日常生活里值得思考的小事，或者是技术上解决的问题和信息资源的整理。</p><hr><h2 id="各种报错"><a href="#各种报错" class="headerlink" title="各种报错"></a>各种报错</h2><p><strong>hexo s</strong>报错</p><pre><code>FATAL Something&#39;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlNunjucks Error:  [Line 78, Column 29] expected variable end</code></pre><p>解决办法：<br><a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">官网描述</a></p><p>翻译过来就是： 转义内容 Hexo使用Nunjucks渲染帖子（较早的版本使用Swig，它们具有相似的语法）。</p><p>用<code>{ { } }</code>或<code>{ ％ ％ }</code>包装的内容将被解析，并可能导致问题。</p><p>您可以使用原始标签插件包装敏感内容。<br>找到正文里面<code>{ {</code>、<code>} }</code>、<code>{ %</code>、<code>% }</code>这样的语句，作如下修改：</p><pre><code>{% raw %}//敏感内容前加上这个Hello {{ sensitive }}l/敏感内容被包装在中间{% endraw %}    //敏感内容后加上这个</code></pre>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> 在更 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一复盘总结</title>
      <link href="/2020/08/25/da-yi-fu-pan-zong-jie/"/>
      <url>/2020/08/25/da-yi-fu-pan-zong-jie/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1456606483&auto=1&height=66"></iframe></div><p><img src="https://i.loli.net/2020/08/23/iPFjVSvNz416AQn.jpg" alt></p><hr><blockquote><p>在大二开学之前把大一复盘总结完成，拖了两个礼拜了还没写,可能拖延症又犯了。</p></blockquote><h1 id="我的大一"><a href="#我的大一" class="headerlink" title="我的大一"></a>我的大一</h1><h2 id="时间线"><a href="#时间线" class="headerlink" title="时间线"></a>时间线</h2><p><img src="http://r.photo.store.qq.com/psc?/V50yGAmm4Y7rG60gKAT73IXxN51CK3xl/TmEUgtj9EK6.7V8ajmQrEDmlLxX5p3JcMGVqq00maXeZj1EL0BlNZ39Ez98p56TknxscaiaPIitxGWIdZhgwdciiCH25KkO0BNthc.zunsQ!/r" alt="从这里开始，十八岁收到的生日礼物是大学录取通知书"></p><p>​    </p><h3 id="2019上半年"><a href="#2019上半年" class="headerlink" title="2019上半年"></a>2019上半年</h3><p>8.27  <strong>初见上大</strong></p><p>9月-11月  <strong>秋季学期</strong></p><p>11月-12月  <strong>冬季学期前六周</strong></p><p>​    </p><p>小插曲  <strong>COVID-19</strong></p><p>​    </p><hr><p>​    </p><h3 id="2020上半年"><a href="#2020上半年" class="headerlink" title="2020上半年"></a>2020上半年</h3><p>1月  <strong>寒假生活</strong></p><p>2月  <strong>疫情影响居家网课</strong></p><p>3月-7月  <strong>冬季学期春季学期网课考试分流</strong></p><p>8月  <strong>计算机实训+十天暑假</strong></p><p>8.27 <strong>返校换寝</strong></p><blockquote><p>再见了，大一！</p></blockquote><hr><h2 id="生活篇"><a href="#生活篇" class="headerlink" title="生活篇"></a>生活篇</h2><p>到了大学的第三周之后开始<strong>早睡早起</strong>，一开始是因为看了张萌姐姐写的《人生效率手册》，富兰克林自传里的时间规划，后来又认识了一个知乎大V王振宇，我也切身体会到了每天早上多出来三个小时自由时间到带来的好处，喜欢上了每天早起写作的感觉，就一直坚持了下来，慢慢也就形成了习惯。</p><p><strong>阅读，写书评</strong>。因为小木屋的返现活动要打卡80天，所以借此机会认真写了一些书评，不过大多数都还是很水的。但是养成了借书看书的习惯。每个月去图书馆借一次书，制定了500本书的大学四年阅读计划。按照《如何阅读一本书》训练自己的阅读能力。商业科技政治文学历史哲学均有涉猎，尤其喜欢各种传记。</p><p><strong>写作，运营公众号</strong>。通过公众号了解互联网运营中的各种策略和技巧，以管窥豹。对于流量有了更清晰的认识，不止是知乎和b站、抖音短视频等等。理解更重要的是内容创作，从每周一更到后来每月一更，不同的阶段有不同的感悟。开始用心留意之前生活中可能并不在意的东西。写作反过来又推动阅读的需求，形成欧皇飞轮，良性循环反馈。</p><p><strong>做计划，复盘总结</strong>。不停尝试新事物，把想做的事情和没做完的事情列出来，在下一个月一项一项去完成。总结自己一个月里值得记录的事情。不断更新，有了自己的个人宪法和复盘系统。每周的日程规划也帮助我很好地处理各种看似不可能完成的任务。形成了自己完成计划的个人习惯。</p><p><strong>时间管理</strong>，其实就是做计划的一部分。主要是花在手机屏幕上的时间太多，使用番茄TODO和手机应用限时减少手机使用时间。不打游戏，不把时间花在没有意义的事情上。</p><p><strong>跑步。</strong>之前是想以参加一次半马为目标，中秋节晚上跑了人生的第一个10公里，那天在宿舍看完《搏击俱乐部》，绕着学校跑了三四圈，一个小时，喜欢上了多巴胺刺激大脑的这种感觉，每个月都会跑个三四十公里，可能还是跑量不够，也没控制配速，所以速度提升不大。后来开始健身，更多了解相关知识，改变了把长跑当做训练目标的想法，制定了自己的健身计划，以提升力量为主。居家半年买了一对哑铃自己在家训练，由于器材有限主要锻炼的是前臂。效果没有达到想象中的好。但是运动成了很好的放松方式，大大提升了我的生活质量。</p><p><strong>写日记。</strong>其实也没什么好记的，有时候就是写一句话，感触深的时候写一大段直抒胸臆，晚上睡觉做的梦记录下来留作写作素材。虽然想要借此训练写作，但实施起来还是有困难，原因在于没有认真考虑过把写日记当成一项任务安排进每天的日程里。目前没有在日记里写过多少有价值的东西，最多是我自己的一些片段回忆。</p><hr><h2 id="学习篇"><a href="#学习篇" class="headerlink" title="学习篇"></a>学习篇</h2><p>在更……</p><hr><h2 id="信息篇"><a href="#信息篇" class="headerlink" title="信息篇"></a>信息篇</h2><h3 id="信息管理"><a href="#信息管理" class="headerlink" title="信息管理"></a>信息管理</h3><blockquote><p>​    “信息管理就是拓宽信道，即打开新的信息入口，接受新的信息；然后整合你收集到的信息，即对无用的信息进行降噪，并且对有用的信息进行排序，提高查找信息的效率。”</p></blockquote><hr><h3 id="信息入口"><a href="#信息入口" class="headerlink" title="信息入口"></a>信息入口</h3><h4 id="我的书单"><a href="#我的书单" class="headerlink" title="我的书单"></a>我的书单</h4><ul><li>计算机书单</li><li>待更……</li></ul><p>​    </p><h4 id="课外学习"><a href="#课外学习" class="headerlink" title="课外学习"></a>课外学习</h4><ul><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV1ex411u7GV" target="_blank" rel="noopener">CS183B@Stanford/YC创业课</a></li><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV19s41167TE" target="_blank" rel="noopener">【英字】MIT公开课 概率论</a></li><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV1Kt411h7Ep" target="_blank" rel="noopener">【公开课】耶鲁大学：博弈论（中英双语字幕）</a></li><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV1as411o7tU" target="_blank" rel="noopener">國立清華大學開放課：科幻概論——主講：鄭運鴻</a></li><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV1gE411M7Eg" target="_blank" rel="noopener">【吴恩达亲授】适用于所有人的人工智能课程（中字）</a></li><li><input disabled type="checkbox"> <a href="https://www.bilibili.com/video/BV1JE411g7XF" target="_blank" rel="noopener">李宏毅2020机器学习深度学习(完整版)国语</a></li></ul><h4 id="手机app"><a href="#手机app" class="headerlink" title="手机app"></a>手机app</h4><ul><li>豆瓣、知乎</li><li>微信读书、京东读书（校园版）、藏书馆</li><li>得到、喜马拉雅、每日英语听力</li><li>一席、TED、b站</li><li>微信公众号</li></ul><h4 id="电脑"><a href="#电脑" class="headerlink" title="电脑"></a>电脑</h4><ul><li>收藏网址书签<ul><li><a href="https://b-ok.cc/" target="_blank" rel="noopener">英文原版电子书1</a></li><li><a href="http://gen.lib.rus.ec/" target="_blank" rel="noopener">英文原版电子书2</a></li><li><a href="https://www.icourse163.org/" target="_blank" rel="noopener">中国大学MOOC</a></li><li><a href="https://open.163.com/" target="_blank" rel="noopener">网易公开课</a></li><li>优质博客</li></ul></li></ul><h4 id="社交通讯APP"><a href="#社交通讯APP" class="headerlink" title="社交通讯APP"></a>社交通讯APP</h4><ul><li>Tim</li><li>微信</li><li>QQ    </li></ul><hr><h2 id="启航篇"><a href="#启航篇" class="headerlink" title="启航篇"></a>启航篇</h2><p>待更……</p>]]></content>
      
      
      <categories>
          
          <category> 复盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
